name: Deploy job runner

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  deploy_path: ${{ secrets.DEPLOY_PATH }}

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.3'
      - uses: actions/checkout@v3
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit

  sonar-build:
    runs-on: ubuntu-latest
    permissions: read-all
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#      - uses: sonarsource/sonarqube-quality-gate-action@master
#        timeout-minutes: 5
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ${{ env.deploy_path }}
    needs:
      - laravel-tests
      - sonar-build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Stop containers
        run: docker-compose down --remove-orphans
      - name: Build docker images
        run: docker-compose build
      - name: Run docker compose
        run: docker compose up -d
      - name: Run composer install
        run: docker compose exec app composer install
      - name: Run migrations
        run: docker compose exec app php artisan migrate
