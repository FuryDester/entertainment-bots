version: '3.9'

services:
    app:
        build:
            context: .
            dockerfile: docker/Dockerfile
            target: base_app
        image: furydester/entertainment-app:latest
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network
        depends_on:
            - pgsql
            - redis
            - webserver

    webserver:
        image: nginx:alpine
        restart: unless-stopped
        tty: true
        ports:
            - '80:80'
            - '443:443'
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network
        depends_on:
            - pgsql
            - redis

    pgsql:
        image: postgres:16
        ports:
            - '5432:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        restart: unless-stopped
        volumes:
            - db-data:/var/lib/postgresql/data
        networks:
            - app-network
        healthcheck:
            test: [ 'CMD', 'pg_isready', '-q', '-d', '${DB_DATABASE}', '-U', '${DB_USERNAME}' ]
            retries: 3
            timeout: 5s

    redis:
        image: redis:alpine
        restart: unless-stopped
        volumes:
            - cache-data:/data
        networks:
            - app-network
        healthcheck:
            test: [ 'CMD', 'redis-cli', 'ping' ]
            retries: 3
            timeout: 5s

    supervisor:
        build:
            context: .
            dockerfile: docker/Dockerfile
            target: supervisor_app
        image: furydester/entertainment-app:supervisor
        restart: unless-stopped
        tty: true
        volumes:
            - ./:/var/www
            - ./docker/supervisor/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
        networks:
            - app-network
        depends_on:
            - pgsql
            - redis

networks:
    app-network:
        driver: bridge

volumes:
    db-data:
        driver: local
    cache-data:
        driver: local
